# Задача 2. Недоделка
# Вы пришли на работу в компанию по разработке игр, целевая аудитория —
# дети и их родители. У предыдущего программиста было задание сделать две
# игры в одном приложении, чтобы пользователь мог выбирать одну из них.
# Однако программист, на место которого вы пришли, перед увольнением не
# успел выполнить эту задачу и оставил только небольшой шаблон проекта.
# Используя этот шаблон, реализуйте игры «Камень, ножницы, бумага» и «Угадай
# число».
# Правила игры «Камень, ножницы, бумага»: программа запрашивает у
# пользователя строку и выводит, победил он или проиграл. Камень бьёт
# ножницы, ножницы режут бумагу, бумага кроет камень.
# Правила игры «Угадай число»: программа запрашивает у пользователя число
# до тех пор, пока он не отгадает загаданное.

# Подсказка № 1
# Реализуйте функцию для игры "Камень, ножницы, бумага". Начните с запроса выбора
# игрока. Убедитесь, что ваш код правильно обрабатывает ввод пользователя и
# проверяет его на допустимые значения. Затем, используя логические условия,
# определите победителя, исходя из выбранного игроком и компьютером варианта.
# Подсказка № 2
# Создайте цикл для игры "Угадай число". В этой игре, создайте бесконечный цикл,
# который будет продолжаться до тех пор, пока игрок не угадает загаданное число.
# Внутри цикла запрашивайте ввод числа у пользователя и проверяйте его на
# соответствие загаданному числу.
# Подсказка № 3
# Определите структуру главного меню. В main_menu предоставьте пользователю выбор
# между двумя играми и опцией выхода. Используйте условные операторы для
# определения, какую функцию вызывать в зависимости от выбора пользователя
import random

def rock_paper_scissors():
    choices = ['камень', 'ножницы', 'бумага']
    action = input(f"Введите свой выбор:\nкамень\nножницы\nбумага\n")
    
    if action not in choices:
        print("Неправильный ввод! Пожалуйста, выберите камень, ножницы или бумагу.")
        return
    
    pc_action = random.choice(choices)
    
    if action == pc_action:
        print(f'У меня {pc_action}, у тебя {action}. Ничья!')
    elif action == "камень":
        if pc_action == 'ножницы':
            print(f'У меня {pc_action}, у тебя {action}. Ты победил!')
        else:
            print(f'У меня {pc_action}, у тебя {action}. Ты проиграл!')
    elif action == "ножницы":
        if pc_action == 'бумага':
            print(f'У меня {pc_action}, у тебя {action}. Ты победил!')
        else:
            print(f'У меня {pc_action}, у тебя {action}. Ты проиграл!')
    elif action == "бумага":
        if pc_action == 'камень':
            print(f'У меня {pc_action}, у тебя {action}. Ты победил!')
        else:
            print(f'У меня {pc_action}, у тебя {action}. Ты проиграл!')

def guess_the_number():
    lower_bound = 1
    upper_bound = 100
    count = 1
    
    while True:
        i_suppose = (lower_bound + upper_bound) // 2
        print(f"Попытка {count}: Загаданное число {i_suppose}:\n1 — равно\n2 — больше\n3 — меньше\n")
        
        while True:
            try:
                answer = int(input("Твой ответ: "))
                if answer in [1, 2, 3]:
                    break
                else:
                    print("Введите 1, 2 или 3.")
            except ValueError:
                print("Введите число.")
        
        if answer == 1:
            print(f"Угадал! С {count} попытки. Твое число: {i_suppose}")
            break
        elif answer == 2:
            lower_bound = i_suppose + 1
        elif answer == 3:
            upper_bound = i_suppose - 1
        
        count += 1

      

def mainMenu(action):
    if action == 1:
        rock_paper_scissors()
    elif action == 2:
        guess_the_number()
    elif action == 3:
        print("Выход из программы...")
        exit()
    else:
        print("Неверная команда")
        

while True:
    action = int(input(f"Выберите игру.\n1- камень ножницы бумага;\n2- угадай число;\n3- выход.\n"))
    mainMenu(action)
